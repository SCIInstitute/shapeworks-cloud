# Generated by Django 3.2.23 on 2023-12-12 18:02

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import s3_file_field.fields


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0036_analysis_multi_domain'),
    ]

    operations = [
        migrations.CreateModel(
            name='CachedAugmentation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('total_data_csv', s3_file_field.fields.S3FileField()),
                ('violin_plot', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedAugmentationPair',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('file', s3_file_field.fields.S3FileField()),
                ('particles', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedDataLoaders',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('mean_pca', s3_file_field.fields.S3FileField()),
                ('std_pca', s3_file_field.fields.S3FileField()),
                ('test_names', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedExample',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('train_particles', s3_file_field.fields.S3FileField()),
                ('train_scalars', s3_file_field.fields.S3FileField()),
                ('validation_particles', s3_file_field.fields.S3FileField()),
                ('validation_scalars', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedPrediction',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('particles', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedTensors',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('train', s3_file_field.fields.S3FileField()),
                ('validation', s3_file_field.fields.S3FileField()),
                ('test', s3_file_field.fields.S3FileField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedModelExamples',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                (
                    'best',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='best',
                        to='core.cachedexample',
                    ),
                ),
                (
                    'median',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='median',
                        to='core.cachedexample',
                    ),
                ),
                (
                    'worst',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='worst',
                        to='core.cachedexample',
                    ),
                ),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedModel',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('configuration', s3_file_field.fields.S3FileField()),
                ('best_model', s3_file_field.fields.S3FileField()),
                ('final_model', s3_file_field.fields.S3FileField()),
                ('train_log_ft', s3_file_field.fields.S3FileField(null=True)),
                ('best_model_ft', s3_file_field.fields.S3FileField(null=True)),
                ('final_model_ft', s3_file_field.fields.S3FileField(null=True)),
                (
                    'examples',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.cachedmodelexamples'
                    ),
                ),
                (
                    'ft_predictions',
                    models.ManyToManyField(
                        related_name='ft_predictions', to='core.CachedPrediction'
                    ),
                ),
                (
                    'pca_predictions',
                    models.ManyToManyField(
                        related_name='pca_predictions', to='core.CachedPrediction'
                    ),
                ),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedDeepSSM',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                (
                    'augmentation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.cachedaugmentation'
                    ),
                ),
                (
                    'data_loaders',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.cacheddataloaders'
                    ),
                ),
                (
                    'model',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.cachedmodel'
                    ),
                ),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cacheddataloaders',
            name='tensors',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='tensors',
                to='core.cachedtensors',
            ),
        ),
        migrations.AddField(
            model_name='cachedaugmentation',
            name='pairs',
            field=models.ManyToManyField(to='core.CachedAugmentationPair'),
        ),
        migrations.AddField(
            model_name='project',
            name='last_cached_deepssm',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cacheddeepssm'
            ),
        ),
    ]
