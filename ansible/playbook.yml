# Run: ansible-playbook -i hosts playbook.yml

- name: Deploy Celery worker
  hosts: all
  remote_user: ubuntu
  vars:
    ansible_python_interpreter: auto
    # This SSH file is written during a Github action (see .github/workflows/update_workers.yml).
    # This file contains a private key saved to Github secrets.
    # The content of the private key secret was obtained from the AWS Console (Create key pair).
    # Important: the key pair must be enabled on all workers in the AWS Console.
    ansible_ssh_private_key_file: ~/.ssh/shapeworks-ec2-b
  roles:
    - role: girder.celery
      vars:
        celery_app: shapeworks_cloud.celery
        celery_repository_url: https://github.com/SCIInstitute/shapeworks-cloud.git
        celery_environment: "{{ django_vars }}"
  tasks:
    - name: Stop celery service to prevent manage_workers task from stopping instances
      systemd:
        state: stopped
        name: celery
      become: true
      become_user: root
    - name: Save environment variables
      ansible.builtin.shell: |
        echo "{{ django_vars }}" > /home/ubuntu/celery_project/.env
    - name: Install swcc
      pip:
        name: /home/ubuntu/celery_project/swcc
        editable: true
        virtualenv: /opt/celery
      become: true
      become_user: root
    - name: Install shapeworks prerequisites
      apt:
        name:
          - curl
          - gcc
          - libc6-dev
          - libgl1-mesa-glx
          - libglib2.0-0
          - libpq-dev
          - libqt5core5a
          - libxt6
          - unzip
        state: present
        install_recommends: no
      become: true
      become_user: root
    - name: Download shapeworks studio
      ansible.builtin.shell: |
        export url=$(curl -s https://api.github.com/repos/SCIInstitute/ShapeWorks/releases | grep -o "http.*dev-linux.*.gz");
        curl -L -o /tmp/shapeworks.tgz $url
        mkdir -p /opt/shapeworks
        rm -rf /opt/shapeworks
        mkdir /opt/shapeworks
        tar -zxvf /tmp/shapeworks.tgz -C /opt/shapeworks --strip-components 1
        rm /tmp/shapeworks.tgz
        cp -r /opt/shapeworks/bin/* /usr/local/bin/.
        cp -nr /opt/shapeworks/lib/* /usr/local/lib/.
      become: true
      become_user: root
    - name: Install Conda
      ansible.builtin.shell: |
        curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/Miniconda3-latest-Linux-x86_64.sh
        chmod 777 /tmp/Miniconda3-latest-Linux-x86_64.sh
        /tmp/Miniconda3-latest-Linux-x86_64.sh -b -f -p /opt/conda
      become: true
      become_user: root
    - name: Create ShapeWorks Conda Env
      ansible.builtin.shell: |
        cd /opt/shapeworks && /opt/conda/bin/conda run /bin/bash -c "source install_shapeworks.sh"
        echo "/opt/conda/bin/conda activate shapeworks" >> ~/.bashrc
      args:
        executable: /bin/bash
      become: true
      become_user: root
    # This is required because composed_configurations attempts to create the staticfiles directory in the python installation directory while being imported.
    # The python installation on the EC2 worker belongs to root, but the Celery worker runs as celery, so it does not have permission to create the directory.
    # The (dumb) solution is to create the directory with the correct permissions in advance.
    - name: Create necessary files for composed_configuration
      file:
        path: /opt/celery/lib/python3.8/site-packages/staticfiles
        owner: celery
        group: celery
        state: directory
      become: true
      become_user: root
    - name: Copy startup script
      # ensure startup script executable for supervisor
      ansible.builtin.shell: |
        chmod 777 /home/ubuntu/celery_project/dev/prod.celery.start.sh
      become: true
      become_user: root
